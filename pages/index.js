import Head from 'next/head'
import link from 'next/link'
import styles from '../styles/Home.module.css'
import {PrismaClient} from '@prisma/client'
import {useState} from 'react'
import Header from '../compos/Header'

const prisma = new PrismaClient()  

export default function Entry({data}) {
    const [formData, setFormData] = useState({})
    const [foodlog, setFoodlog] = useState(data)

    async function saveFood(e){
        e.preventDefault()
        setFoodlog([...foodlog, formData])
        const response = await fetch('/api/entries', {
            method: 'POST',
            body: JSON.stringify(formData)
        })
        
        return await response.json() 
        
    }
    return (
        <div>
            <Head>
        <title>FoodLog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.3/css/bulma.min.css" />

      </Head>
          
            <Header />    
 <div class="columns mt-6 is-centered is-three-quarters-mobile">
 {foodlog.map(item => (
    <div class="column is-one-quarter is-three-quarters-mobile">
        <div class="card">
            <div class="card-header">
                <header><p class="card-header-title">{item.Mealtype}</p>
                </header>
                <div class="card-content">
                    <div class="content">
                           <p>{item.Calories} <b>calories</b></p> 
                           <p>{item.Protein} <b>grams of protein</b></p>
                           <p>{item.Carbohydrates} <b>grams of carbohydrates</b></p>
                           <p>{item.Fat} <b>grams of fat</b></p>
                           <br></br>
                           <div class="card-footer">
                               <div class="card-footer-item">
                                 <button class="button is-outline [p6"> <a href={`./foodlog/${item.slug}`}>View</a></button>
                                 </div>
                               </div>
            </div>
                 </div>
                    </div>
                          </div>
    </div>
    ))}
          </div>
          <main>

            <form className={styles.Home} onSubmit={saveFood}>
                    <input className={styles.Input} list="meals" placeholder="Meal type" onChange={e => setFormData({ ...formData,    Mealtype: e.target.value })} />
                    <datalist id="meals">
    <option value="BreakfastðŸŒ…" />
    <option value="LunchðŸŒ„" />
    <option value="NightðŸŒƒ" />
  </datalist>
                    <input className={styles.Input} type="number" placeholder="Calories" name="Calories" onChange={e => setFormData({ ...formData, Calories: +e.target.value })} />
                    <input className={styles.Input} type="number" placeholder="Protein" name="Protein" onChange={e => setFormData({ ...formData, Protein: +e.target.value })} />
                    <br></br>
                    <input className={styles.Input} type="number" placeholder="Carbohydrates" name="Carbohydrates" onChange={e => setFormData({ ...formData, Carbohydrates: +e.target.value })} />
                    <input className={styles.Input} type="number" placeholder="Fat" name="Fat" onChange={e => setFormData({ ...formData, Fat: +e.target.value })} />
                    <input className={styles.Input} type="text" placeholder="Slug" name="slug" onChange={e => setFormData({ ...formData, slug: e.target.value })} />
                    <br></br> <br></br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
                    <button class="button is-info is-hovered" className={styles.button} type="submit">Add Log</button>
                </form>
 
              
                </main>
            </div>
    )
}
 
export async function getServerSideProps() {

    const foodlog = await prisma.foodlog.findMany()

      return{
            props: { data: foodlog }
      }
}